{
  "name": "@cycosoft/eyas",
  "version": "3.5.1",
  "description": "Simplified Hands-on Testing for Web Applications",
  "main": "./index.js",
  "packageName": "Eyas",
  "author": "Cycosoft, LLC (https://cycosoft.com)",
  "homepage": "https://github.com/cycosoft/Eyas/releases",
  "publishConfig": {
    "access": "public"
  },
  "bin": {
    "eyas": "./dist/cli/index.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cycosoft/Eyas.git"
  },
  "scripts": {
    "_______________DEV_______________": "",
    "dev": "npm i && npm-check -u -i '\"inquirer\"' && npm run compile:prep && npm run compile:ui && npm run dev:module",
    "dev:module": "npm run compile:module && electron .build/index.js --dev --trace-warnings",
    "dev:mac:cli": "npm i && npm-check -u -i '\"inquirer\"' && cross-env NODE_ENV=dev npm run compile:mac:no-sign && cross-env NODE_ENV=dev node dist/cli/index.js",
    "dev:mac:installer": "npm i && npm-check -u -i '\"inquirer\"' && cross-env NODE_ENV=dev npm run compile:mac:installer:no-sign",
    "dev:win:cli": "npm i && npm-check -u -i '\"inquirer\"' && cross-env NODE_ENV=dev npm run compile:win:module && cross-env NODE_ENV=dev node dist/cli/index.js",
    "dev:win:installer": "npm i && npm-check -u -i '\"inquirer\"' && cross-env NODE_ENV=dev npm run compile:win:installer",
    "dev:ui": "npm i && npm-check -u -i '\"inquirer\"' && vite --config src/eyas-interface/app/.vite.config.ui.js --open",
    "dev:fixes": "sudo xattr -r -d com.apple.quarantine ./",
    "test:build": "npm run compile:prep && npm run compile:ui && npm run compile:module && npm run test",
    "test": "wdio run ./wdio.conf.js",
    "_____________COMPILE_____________": "",
    "compile:prep": "node src/scripts/compile-prep.js",
    "compile:mac:copy": "mv ./.runners/mac-arm64/Eyas.app ./.runners/mac-arm64/Start.app && ditto -c -k --sequesterRsrc --keepParent ./.runners/mac-arm64/Start.app ./dist/runners/Start.app.zip",
    "compile:ui": "vite build --config src/eyas-interface/app/.vite.config.ui.js",
    "compile:module": "electron-vite build && node src/scripts/compile-module.js",
    "compile:runner": "npm cache clean --force && node src/scripts/compile-runners.js",
    "compile:win32": "npm i && cross-env FORCE_BUILD=win32 npm run compile:runner",
    "compile:cleanup": "node src/scripts/compile-cleanup.js",
    "compile:mac": "npm run compile:prep && npm run compile:ui && npm run compile:module && npm run compile:runner && npm run compile:mac:copy && npm run compile:cleanup",
    "compile:mac:installer": "npm run compile:prep && npm run compile:ui && npm run compile:module && cross-env PUBLISH_TYPE=installer npm run compile:runner && npm run sign:mac:pkg && npm run notarize:pkg:output && npm run notarize:staple:pkg",
    "compile:docker": "npm run compile:prep && npm run compile:ui && npm run compile:module && npm run docker:run && npm run compile:cleanup",
    "compile:prod": "npm run compile:prep && npm run compile:ui && npm run compile:module && npm run docker:run && npm run compile:runner && npm run notarize:zip && npm run notarize && npm run notarize:staple && npm run compile:mac:copy && npm run compile:cleanup",
    "compile:win:module": "npm run compile:prep && npm run compile:ui && npm run compile:module && npm run compile:runner && npm run compile:cleanup",
    "compile:win:installer": "npm run compile:prep && npm run compile:ui && npm run compile:module && cross-env PUBLISH_TYPE=installer npm run compile:runner",
    "compile:mac:no-sign": "npm run compile:prep && npm run compile:ui && npm run compile:module && npm run compile:runner && npm run compile:mac:copy && npm run compile:cleanup",
    "compile:mac:installer:no-sign": "npm run compile:prep && npm run compile:ui && npm run compile:module && cross-env PUBLISH_TYPE=installer npm run compile:runner",
    "compile:all:no-sign": "npm run compile:prep && npm run compile:ui && npm run compile:module && npm run docker:run && npm run compile:runner && npm run compile:mac:copy && npm run compile:cleanup",
    "_____________SIGNING_____________": "",
    "sign:win": "signtool sign /debug /n \"Open Source Developer, Eric Higginson\" /t http://time.certum.pl/ /fd sha256 /v ./dist/runners/Start.exe",
    "sign:win:verify": "signtool verify /pa ./dist/runners/Start.exe",
    "sign:win:verify:msi": "signtool verify /pa ./.runners/EyasInstaller.msi",
    "sign:mac:pkg": "dotenv -c -- npm run _encapsulated_sign:mac:pkg",
    "sign:mac:verify": "codesign -dvvv ./.runners/mac-arm64/Eyas.app",
    "sign:mac:pkg:verify": "pkgutil --check-signature ./.runners/EyasInstaller.pkg",
    "notarize:zip": "ditto -c -k --sequesterRsrc --keepParent ./.runners/mac-arm64/Eyas.app ./.runners/mac-arm64/Eyas-for-notary.zip",
    "notarize": "xcrun notarytool submit ./.runners/mac-arm64/Eyas-for-notary.zip --keychain-profile \"Eyas\" --wait",
    "notarize:pkg:output": "xcrun notarytool submit ./.runners/EyasInstaller.pkg --keychain-profile \"Eyas\" --wait",
    "notarize:verify": "spctl -a -vvv -t install ./.runners/mac-arm64/Eyas.app",
    "notarize:verify:pkg": "spctl -a -vvv -t install ./.runners/EyasInstaller.pkg",
    "notarize:staple": "xcrun stapler staple ./.runners/mac-arm64/Eyas.app",
    "notarize:staple:verify": "xcrun stapler validate ./.runners/mac-arm64/Eyas.app",
    "notarize:staple:pkg": "xcrun stapler staple ./.runners/EyasInstaller.pkg",
    "notarize:staple:verify:pkg": "xcrun stapler validate ./.runners/EyasInstaller.pkg",
    "notarize:log": "xcrun notarytool log PASTE_LOG_ID_HERE --keychain-profile \"Eyas\"",
    "_____________SCRIPTS_____________": "",
    "_encapsulated_sign:mac:pkg": "productsign --sign \"$CERT_NAME\" ./.runners/EyasInstaller-unsigned.pkg ./.runners/EyasInstaller.pkg",
    "docker:run": "docker build -t eyas . && docker run -v ./dist/runners:/usr/src/app/dist/runners -it --rm eyas",
    "bundle": "npm pack",
    "deploy": "npm run ENSURE_VERSION_SET && npm publish",
    "bump:patch": "npm version patch && git push && git push --tags",
    "bump:minor": "npm version minor && git push && git push --tags",
    "bump:beta": "npm version prerelease --preid beta && git push && git push --tags"
  },
  "license": "MIT",
  "keywords": [
    "testing",
    "static",
    "web",
    "applications",
    "serverless",
    "eyas",
    "manual",
    "uat",
    "feature",
    "branch"
  ],
  "files": [
    "dist",
    "CHANGELOG.md"
  ],
  "dependencies": {
    "archiver": "^7.0.1",
    "commander": "^12.1.0",
    "date-fns": "^4.1.0",
    "electron": "^32.1.2",
    "electron-app-universal-protocol-client": "^1.3.0",
    "electron-builder": "^24.13.3",
    "express": "^4.21.0",
    "extract-zip": "^2.0.1",
    "fs-extra": "^11.2.0",
    "inquirer": "8.2.6",
    "mixpanel": "^0.18.0",
    "mkcert": "^3.2.0",
    "node-machine-id": "^1.1.12",
    "pinia": "^2.2.4",
    "semver": "^7.6.3",
    "validator": "^13.12.0",
    "vue": "^3.5.10",
    "vuetify": "^3.7.2"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.25.7",
    "@babel/register": "^7.25.7",
    "@electron/asar": "^3.2.13",
    "@electron/osx-sign": "^1.3.1",
    "@mdi/font": "^7.4.47",
    "@rollup/plugin-terser": "^0.4.4",
    "@testing-library/webdriverio": "^3.2.1",
    "@vitejs/plugin-vue": "^5.1.4",
    "@wdio/cli": "^9.1.2",
    "@wdio/local-runner": "^9.1.2",
    "@wdio/mocha-framework": "^9.1.2",
    "@wdio/spec-reporter": "^9.1.2",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "dotenv-cli": "^7.4.2",
    "electron-vite": "^2.3.0",
    "eslint": "^9.11.1",
    "eslint-plugin-vue": "^9.28.0",
    "npm-check": "^6.0.1",
    "sass": "^1.79.4",
    "vite": "^5.4.8",
    "vite-plugin-vuetify": "^2.0.4",
    "wdio-electron-service": "^7.0.5"
  },
  "overrides": {
    "package-json": ">6.5.0 <8.0.0",
    "ws": "^7.0.0"
  }
}
